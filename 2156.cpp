/*
2156번. 포도주 시식

효주는 포도주 시식회에 갔다. 그 곳에 갔더니, 테이블 위에 다양한 포도주가 들어있는 포도주 잔이 일렬로 놓여 있었다. 
효주는 포도주 시식을 하려고 하는데, 여기에는 다음과 같은 두 가지 규칙이 있다.
1. 포도주 잔을 선택하면 그 잔에 들어있는 포도주는 모두 마셔야 하고, 마신 후에는 원래 위치에 다시 놓아야 한다.
2. 연속으로 놓여 있는 3잔을 모두 마실 수는 없다.

효주는 될 수 있는 대로 많은 양의 포도주를 맛보기 위해서 어떤 포도주 잔을 선택해야 할지 고민하고 있다.
1부터 n까지의 번호가 붙어 있는 n개의 포도주 잔이 순서대로 테이블 위에 놓여 있고, 각 포도주 잔에 들어있는 포도주의 양이 주어졌을 때,
효주를 도와 가장 많은 양의 포도주를 마실 수 있도록 하는 프로그램을 작성하시오.
*/

/*
풀이 방법 : 다이나믹 프로그래밍을 이용하여 구현
*/

#include <iostream>
#include <algorithm>
using namespace std;

int main()
{
	int n;
	cin >> n;
	int *cup = new int[n], **DP = new int*[n];
	for (int i = 0; i < n; i++)
	{
		cin >> cup[i];
		DP[i] = new int[3];
	}
	DP[0][0] = 0, DP[0][1] = cup[0], DP[0][2] = 0;
	for (int i = 1; i < n; i++)
	{
		DP[i][0] = max(DP[i - 1][0], max(DP[i - 1][1], DP[i - 1][2]));
		DP[i][1] = DP[i - 1][0] + cup[i];
		DP[i][2] = DP[i - 1][1] + cup[i];
	}
	cout << max(DP[n - 1][0], max(DP[n - 1][1], DP[n - 1][2])) << endl;
	return 0;
}